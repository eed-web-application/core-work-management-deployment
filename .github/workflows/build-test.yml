name: Build Test
on: 
  workflow_call:
      secrets:
          token:
              required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
    build_and_test:
      runs-on: ubuntu-latest
      steps:
        - name: Install Ghostscript
          run: |
           sudo apt-get update
           sudo apt-get install -y ghostscript
        - name: Checkout source code
          uses: actions/checkout@v3
        - uses: actions/setup-java@v3
          with:
            distribution: temurin
            java-version: 21
        - name: Build Project
          uses: gradle/gradle-build-action@v2
          env:
            CI: true
            GH_USERNAME: ${{ secrets.GH_PACKAGE_USERNAME }}
            GH_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}
          with:
            cache-disabled: true
            arguments: assemble
        - name: Uplaod artifact
          uses: actions/upload-artifact@v3
          with:
            name: ApplicationJar
            path: build/libs/*
        - name: Check for docker-compose.yml file
          uses: andstor/file-existence-action@v2
          id: check_files
          with:
            files: "docker-compose.yml"
        - name: Launch test backend
          if: steps.check_files.outputs.files_exists == 'true'
          run: |
            docker compose -f docker-compose.yml up -d
            sleep 5
        - name: Test Project
          uses: gradle/gradle-build-action@v2
          env:
            CI: true
          with:
            arguments: test
        - name: Shutdown test backend
          if: steps.check_files.outputs.files_exists == 'true' &&  (success() || failure())
          run: |
            docker compose -f docker-compose.yml logs
            docker compose -f docker-compose.yml down -v
        - name: Add coverage to PR
          id: jacoco
          uses: madrapps/jacoco-report@v1.6.1
          with:
            paths: ${{ github.workspace }}/build/coverage/test/jacocoTestReport.xml
            token: ${{ secrets.GITHUB_TOKEN }}
            min-coverage-overall: 50
            min-coverage-changed-files: 60
    build-docker-images:
      name: Build and Publish Docker Image
      runs-on: ubuntu-latest
      needs: build_and_test
      if: always() 
      outputs:
        IMAGE_TO_DEPLOY: ${{ steps.meta.outputs.tags }}
      steps:
        - name: Checkout source code
          uses: actions/checkout@v3
        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
            name: ApplicationJar
            path: build/libs
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Log in to the Container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Docker Metadata
          id: meta
          uses: docker/metadata-action@v4
          with:
            # list of Docker images to use as base name for tags
            images: ${{env.REGISTRY }}/${{ env.IMAGE_NAME }}
            # generate Docker tags based on the following events/attributes
            tags: |
              type=ref,event=pr
            labels: |
              maintainer=bisegni@slac.stanford.edu
        - name: Build and push Docker image
          uses: docker/build-push-action@v5
          id: build_and_push
          with:
            context: .
            file: ./Dockerfile
            push: true
            provenance: false
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            build-args: |
              GH_USERNAME=${{ secrets.GH_PACKAGE_USERNAME }}
              GH_TOKEN=${{ secrets.GH_PACKAGE_TOKEN }}
            platforms: linux/amd64,linux/arm64
